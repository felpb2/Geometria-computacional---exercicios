#include <bits/stdc++.h>
 using namespace std;
 
 #define _ cin.tie(0);ios::sync_with_stdio(0);
 #define mp make_pair
 #define mt make_tuple
 #define f first
 #define s second
 
bool prod( pair<double,double> p1, pair<double,double> p2 ){
	long double pd = p1.f * p2.s - p1.s * p2.f;
	return ( pd >= 0 ? true : false );
}

int main() {
 	_	
 	
 	int n,m;
 	while(cin >> n >> m){
 
 		vector<pair<double,double>> pont;
 
 		for(int i=0; i < n + m; i++){
 			double x,y;
 			cin >> x >> y;
     		pont.push_back(mp(x,y)); 			
 		}
        
 
 		int contador = 0;
		pair<double,double> ij, jc, ci, ip, cp, jp;
 		long long int energia = 0;
		bool p1,p2,p3;
 		for(double i = 0; i < n - 2; i++){
 			for(double j = i + 1; j < n - 1; j++){
 				for(double c = j + 1; c < n; c++){
 					ij = mp( pont[j].f - pont[i].f, pont[j].s - pont[i].s);
					jc = mp( pont[c].f - pont[j].f, pont[c].s - pont[j].s);
					ci = mp( pont[i].f - pont[c].f, pont[i].s - pont[c].s);
					contador = 0;
 					for(double v = n;  v < n + m ; v++){
 						ip = mp( pont[v].f - pont[i].f, pont[v].s - pont[i].s);	
						jp = mp( pont[v].f - pont[j].f, pont[v].s - pont[j].s);
						cp = mp( pont[v].f - pont[c].f, pont[v].s - pont[c].s);

						p1 = prod(ij,ip); p2 = prod( jc,jp); p3 = prod( ci,cp);
						if(p1 == p2 && p1 == p3 ){
							contador++;
						}	
					}
 					energia += pow(contador,2);
 				}
 			}
 		}
 		
 		cout << energia << '\n';
 	}
 	
     return 0;
 }
